<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context.xsd">

    <description>shiro与spring容器整合的配置文件</description>
    <!--##################################1、配置realm服务端安全获取密码工具##############################################-->
    <!--
        1、配置服务端账户信息安全获取realm
     -->
    <bean id="myRealm" class="com.loong.modules.commons.shiro.realm.MyRealmDemo">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <!--开启cache管理-->
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authenticationCacheName" value="userCache"/>
    </bean>
    <!--配置密码匹配器-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="SHA-1"/>
        <property name="hashIterations" value="1024"/>
        <!--<property name="storedCredentialsHexEncoded" value="true"/>-->
    </bean>
    <!--##################################2、配置session的获取方式#######################################################-->
    <!--
        2、配置CachingRealm所需的缓存管理器,这里使用的是Ehcache
     -->
    <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <!--
        配置id生成器
    -->
    <bean id="idGenerator" class="org.apache.shiro.session.mgt.eis.RandomSessionIdGenerator"/>

    <!--
        配置sessionDao
    -->
    <bean id="enterpriseCacheSessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <!--缓存管理-->
        <property name="cacheManager" ref="ehCacheManager"/>
        <property name="sessionIdGenerator" ref="idGenerator"/>
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache1"/>
    </bean>
    <!--######################################3、自定义返回的session 值id################################################-->
    <!--
        配置相应时的cookie设置
    -->
    <bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <property name="name" value="jss"/>
    </bean>

    <!--#####################################4、配置shiro的默认的与web项目整合时的配置#####################################-->
    <!--
        默认的session管理对象
    -->
    <bean id="defaultWebSessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <!--设置session的获取方式-->
        <property name="sessionDAO" ref="enterpriseCacheSessionDAO"/>
        <!--为其内部的sessionDao设置缓存管理对象-->
        <property name="cacheManager" ref="ehCacheManager"/>
        <!--设置session的超时时间-->
        <property name="globalSessionTimeout" value="1800000"/>
        <!--设置检查session是否超时的间隔-->
        <property name="sessionValidationInterval" value="60000"/>
        <!--删除无效的session-->
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="simpleCookie"/>
        <!--关闭url尾部的jsession-->
        <property name="sessionIdUrlRewritingEnabled" value="false"/>
    </bean>

    <!--#####################################5、配置shiro权限管理的核心##################################################-->
    <!--
        3、配置SecurityManager
    -->
    <bean id="defaultWebSecurityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <!--指定保存的usercache使用的cache工具-->
        <property name="cacheManager" ref="ehCacheManager"/>
        <property name="sessionManager" ref="defaultWebSessionManager"/>
        <!--
            可以自定义的一些属性
            <property name="rememberMeManager" ref=""/>
            <property name="subjectDAO" ref=""/>
            <property name="subjectFactory" ref=""/>
        -->
    </bean>

    <!--########################################6、配置shiro的过滤器（重要）#############################################-->
    <!--
        4、配置登陆认证的过滤器
        注意：这里的bean id 必须与web.xml中配置的DelegatingFilterProxy的<filter-name>值一致（特别重要）
    -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="defaultWebSecurityManager"/>
        <property name="loginUrl" value="/static/login.jsp"/>
        <property name="successUrl" value="/static/list.jsp"/>
        <property name="unauthorizedUrl" value="/static/unauthorized.jsp"/>
        <property name="filterChainDefinitions">
            <value>
                /static/login.jsp =anon
                /showSession =anon
                /listSession =anon
                /deleteSession =anon
                /login = anon
                /logout = logout
                /** = authc
            </value>
        </property>
    </bean>
    <!--##########################################7、开启shiro在项目中的注解功能#########################################-->
    <!--开启shiro的注解，aop模式-->

</beans>